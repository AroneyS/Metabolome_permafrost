library(reshape2)
require(vegan)
library(ggsci)
library(rstatix)
library(ggpubr)
library(ggrepel)
library(grid)
library(gridExtra)
library(phyloseq)
library(ggridges)
library(patchwork)
library(corrplot)
library(tidyverse)
distance_func <- function(bnti_matrix, geo_matrix, geo_col){
geo_selected <- geo_matrix %>%
select(geo_col, SampleID) %>%
rename(Selected = geo_col) %>%
filter(!is.na(Selected))
bnti_filt <- bnti_matrix[rownames(bnti_matrix) %in% geo_selected$SampleID,
colnames(bnti_matrix) %in% geo_selected$SampleID]
geo_selected <- geo_selected %>%
filter(SampleID %in% rownames(bnti_filt))
bnti_filt <- bnti_filt[geo_selected$SampleID, geo_selected$SampleID]
n <- length(rownames(bnti_filt))
dist_mat <- as.data.frame(matrix(nrow = n, ncol = n))
rownames(dist_mat) <- rownames(bnti_filt)
colnames(dist_mat) <- colnames(bnti_filt)
for(i in 1:(n-1)){
for(j in (i+1):n){
dist_mat[j, i] <- abs(geo_selected$Selected[j] - geo_selected$Selected[i])
}
}
dist_mat[upper.tri(dist_mat)] = t(dist_mat)[upper.tri(dist_mat)]
return(dist_mat)
}
mantel_fun <- function(bnti_matrix, geo_matrix){
bnti_filt <- bnti_matrix[rownames(bnti_matrix) %in% rownames(geo_matrix),
colnames(bnti_matrix) %in% colnames(geo_matrix)]
mantel_test <- mantel(bnti_filt, geo_matrix,
method = "pearson", permutations = 9999)
return(mantel_test)
}
list_colors <- c('Palsa' = '#703C1B', 'Bog' = '#058000','Fen' = '#0001FF')
# Load in bNTI
weig <- read_csv("Assembly_Metabolome/output/Abisko_TWCD_bNTI.csv") %>%
column_to_rownames(var = "...1")
# Load in bNTI
weig <- read_csv("../Assembly_Metabolome/output/Abisko_TWCD_bNTI.csv") %>%
column_to_rownames(var = "...1")
# Load in bNTI
weig <- read_csv("../Assembly_Metabolome/output/Abisko_TWCD_bNTI.csv") %>%
column_to_rownames(var = "...1")
library(reshape2)
require(vegan)
library(ggsci)
library(rstatix)
library(ggpubr)
library(ggrepel)
library(grid)
library(gridExtra)
library(phyloseq)
library(ggridges)
library(patchwork)
library(corrplot)
library(tidyverse)
# Load in bNTI
weig <- read_csv("../Assembly_Metabolome/output/Abisko_TWCD_bNTI.csv") %>%
column_to_rownames(var = "...1")
# Load in RCBC
weig.rcbc <- read_csv("../Assembly_Metabolome/output/Abisko_TWCD_RCBC_9999.csv")%>%
column_to_rownames(var = "...1")
# Matching the order of RCBC to bNTI results
weig.rcbc = weig.rcbc[row.names(weig), colnames(weig), drop = F]
diag(weig.rcbc) = NA
weig[upper.tri(weig)] = t(weig)[upper.tri(weig)]
weig.rcbc[abs(weig) > 2] = NA
# Melting data
weig = melt(as.matrix(weig)); weig$Type = "Bulk"
weig.rcbc = melt(as.matrix(weig.rcbc)); weig.rcbc$Type = "All"
bnti_data <- weig %>%
filter(!is.na(value))
rcbc_data <- weig.rcbc %>%
filter(!is.na(value))
# Adding Habitat Information
bnti_data$Habitat = "Bog"
bnti_data$Habitat[grep("E", bnti_data$Var2)] = "Fen"
bnti_data$Habitat[grep("P", bnti_data$Var2)] = "Palsa"
bnti_data$Habitat <- factor(bnti_data$Habitat, levels = c("Palsa", "Bog", "Fen"))
rcbc_data$Habitat = "Bog"
rcbc_data$Habitat[grep("E", rcbc_data$Var2)] = "Fen"
rcbc_data$Habitat[grep("P", rcbc_data$Var2)] = "Palsa"
rcbc_data$Habitat <- factor(rcbc_data$Habitat, levels = c("Palsa", "Bog", "Fen"))
bnti_data_within <- bnti_data %>%
filter(
(str_detect(Var1, '_P_') & str_detect(Var2, '_P_')) |
(str_detect(Var1, '_E_') & str_detect(Var2, '_E_')) |
(str_detect(Var1, '[a-z]_S_') & str_detect(Var2, '[a-z]_S_'))
) %>%
mutate(Type = str_replace(Type, 'All', 'Bulk'))
stat_df <- bnti_data_within %>%
wilcox_test(value~Habitat) %>%
adjust_pvalue(method = 'bonferroni') %>%
add_significance() %>%
add_xy_position()
bp_group_vio_so <- bnti_data_within %>%
mutate(Type = "Bulk metabolites") %>%
ggplot(aes(x = Habitat, y = value, fill = Habitat))+
geom_boxplot(width = 0.2, show.legend = FALSE) +
geom_violin(alpha = 0.5, show.legend = FALSE) +
geom_hline(yintercept = c(-2,2), color = "red", lty = 2)+
labs(#title = expression(bold(paste(beta, "NTI ", metabolites))),
y = expression(bold(paste(beta, 'NTI'))),
fill = 'Habitat')+
scale_fill_manual(values = list_colors)+
stat_pvalue_manual(stat_df,
label = 'p.adj.signif', inherit.aes = FALSE, hide.ns = TRUE)+
facet_wrap(~Type)+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
#axis.title.y = element_text(hjust = 0.5),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
strip.background = element_rect(fill = 'black'),
strip.text = element_text(color = 'white', face = 'bold'))
bp_group_vio_so
bacteria_bnti <- read_csv("../Assembly_Microbiome/weighted_BNTI_bacteria.csv") %>%
column_to_rownames("...1")
bacteria_bnti <- bacteria_bnti[colnames(bacteria_bnti),] %>%
rename(!!(set_names(samples_names$names_bnti, samples_names$SampleID)))
samples_names <- read_csv("../Assembly_Microbiome/data/metadata_matched_MAGs_data_11-5-21.csv")
bacteria_bnti <- read_csv("../Assembly_Microbiome/weighted_BNTI_bacteria.csv") %>%
column_to_rownames("...1")
bacteria_bnti <- bacteria_bnti[colnames(bacteria_bnti),] %>%
rename(!!(set_names(samples_names$names_bnti, samples_names$SampleID)))
View(samples_names)
samples_names <- read_csv("../Assembly_Microbiome/data/metadata_matched_MAGs_data_11-5-21.csv")
View(samples_names)
bacteria_bnti <- bacteria_bnti[colnames(bacteria_bnti),] #%>%
rename(!!(set_names(samples_names$names_bnti, samples_names$SampleID)))
rownames(bacteria_bnti) <- colnames(bacteria_bnti)
bacteria_r <- bacteria_bnti
bacteria_r[upper.tri(bacteria_bnti)] <-  t(bacteria_bnti)[upper.tri(bacteria_bnti)]
# Melting data
bnti_data_bacteria = melt(as.matrix(bacteria_r))
bnti_data_bacteria <- bnti_data_bacteria %>%
filter(!is.na(value))
# Adding Habitat Information
bnti_data_bacteria$Habitat = "Bog"
bnti_data_bacteria$Habitat[grep("E", bnti_data_bacteria$Var2)] = "Fen"
bnti_data_bacteria$Habitat[grep("P", bnti_data_bacteria$Var2)] = "Palsa"
bnti_data_bacteria$Habitat <- factor(bnti_data_bacteria$Habitat, levels = c("Palsa", "Bog", "Fen"))
bnti_data_bacteria <- bnti_data_bacteria %>%
mutate(Type = "microbe")
bnti_data_within_bac <- bnti_data_bacteria %>%
filter(
(str_detect(Var1, '_P_') & str_detect(Var2, '_P_')) |
(str_detect(Var1, '_E_') & str_detect(Var2, '_E_')) |
(str_detect(Var1, '[a-z]_S_') & str_detect(Var2, '[a-z]_S_'))
)
stat_df <- bnti_data_within_bac %>%
wilcox_test(value~Habitat) %>%
adjust_pvalue(method = 'bonferroni') %>%
add_significance() %>%
add_xy_position()
bp_group_vio_bacteria <- bnti_data_within_bac %>%
mutate(type = 'Microbiome') %>%
ggplot(aes(x = Habitat, y = value, fill = Habitat))+
geom_boxplot(width = 0.2, show.legend = FALSE) +
geom_violin(alpha = 0.5, show.legend = FALSE) +
geom_hline(yintercept = c(-2,2), color = "red", lty = 2)+
labs(y = expression(bold(paste(beta, 'NTI'))),
fill = 'Habitat')+
scale_fill_manual(values = list_colors)+
stat_pvalue_manual(stat_df,
label = 'p.adj.signif', inherit.aes = FALSE, hide.ns = TRUE)+
facet_wrap(~type) +
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5),
# axis.text.y = element_text(size = 15),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
strip.background = element_rect(fill = 'black'),
strip.text = element_text(color = 'white', face = 'bold'))
bp_group_vio_bacteria
View(bnti_data_bacteria)
samples_names <- read_csv("../Assembly_Microbiome/data/metadata_matched_MAGs_data_11-29-21.csv")
View(samples_names)
bacteria_bnti <- bacteria_bnti[colnames(bacteria_bnti),] %>%
rename(!!(set_names(samples_names$names_bnti, samples_names$SampleID)))
rownames(bacteria_bnti) <- colnames(bacteria_bnti)
bacteria_r <- bacteria_bnti
bacteria_r[upper.tri(bacteria_bnti)] <-  t(bacteria_bnti)[upper.tri(bacteria_bnti)]
# Melting data
bnti_data_bacteria = melt(as.matrix(bacteria_r))
bnti_data_bacteria <- bnti_data_bacteria %>%
filter(!is.na(value))
# Adding Habitat Information
bnti_data_bacteria$Habitat = "Bog"
bnti_data_bacteria$Habitat[grep("E", bnti_data_bacteria$Var2)] = "Fen"
bnti_data_bacteria$Habitat[grep("P", bnti_data_bacteria$Var2)] = "Palsa"
bnti_data_bacteria$Habitat <- factor(bnti_data_bacteria$Habitat, levels = c("Palsa", "Bog", "Fen"))
bnti_data_bacteria <- bnti_data_bacteria %>%
mutate(Type = "microbe")
bnti_data_within_bac <- bnti_data_bacteria %>%
filter(
(str_detect(Var1, '_P_') & str_detect(Var2, '_P_')) |
(str_detect(Var1, '_E_') & str_detect(Var2, '_E_')) |
(str_detect(Var1, '[a-z]_S_') & str_detect(Var2, '[a-z]_S_'))
)
stat_df <- bnti_data_within_bac %>%
wilcox_test(value~Habitat) %>%
adjust_pvalue(method = 'bonferroni') %>%
add_significance() %>%
add_xy_position()
bp_group_vio_bacteria <- bnti_data_within_bac %>%
mutate(type = 'Microbiome') %>%
ggplot(aes(x = Habitat, y = value, fill = Habitat))+
geom_boxplot(width = 0.2, show.legend = FALSE) +
geom_violin(alpha = 0.5, show.legend = FALSE) +
geom_hline(yintercept = c(-2,2), color = "red", lty = 2)+
labs(y = expression(bold(paste(beta, 'NTI'))),
fill = 'Habitat')+
scale_fill_manual(values = list_colors)+
stat_pvalue_manual(stat_df,
label = 'p.adj.signif', inherit.aes = FALSE, hide.ns = TRUE)+
facet_wrap(~type) +
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),
axis.title.y = element_text(hjust = 0.5),
# axis.text.y = element_text(size = 15),
axis.text.x = element_blank(),
axis.title.x = element_blank(),
axis.ticks.x = element_blank(),
strip.background = element_rect(fill = 'black'),
strip.text = element_text(color = 'white', face = 'bold'))
bp_group_vio_bacteria
